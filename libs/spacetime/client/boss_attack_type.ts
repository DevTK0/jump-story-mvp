// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
export type BossAttack = {
  attackId: number,
  bossId: string,
  attackSlot: number,
  damage: number,
  range: number,
  cooldown: number,
  knockback: number,
  hits: number,
  attackType: string,
  projectile: string | undefined,
  skillEffect: string | undefined,
  animationDuration: number,
};

/**
 * A namespace for generated helper functions.
 */
export namespace BossAttack {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("attackId", AlgebraicType.createU32Type()),
      new ProductTypeElement("bossId", AlgebraicType.createStringType()),
      new ProductTypeElement("attackSlot", AlgebraicType.createU8Type()),
      new ProductTypeElement("damage", AlgebraicType.createF32Type()),
      new ProductTypeElement("range", AlgebraicType.createF32Type()),
      new ProductTypeElement("cooldown", AlgebraicType.createF32Type()),
      new ProductTypeElement("knockback", AlgebraicType.createU32Type()),
      new ProductTypeElement("hits", AlgebraicType.createU8Type()),
      new ProductTypeElement("attackType", AlgebraicType.createStringType()),
      new ProductTypeElement("projectile", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("skillEffect", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("animationDuration", AlgebraicType.createI32Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: BossAttack): void {
    BossAttack.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): BossAttack {
    return BossAttack.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


